importScripts("idb-min.js");const dataHost="localhost:1337",pathNames=["restaurants","reviews"];var CACHE_NAME="mws-restaurant-cache-v22",urlsToCache=["/","/index.html","/favicon.ico","/restaurant.html","/js/index-min.js","/js/restaurant.js"];self.addEventListener("install",function(e){e.waitUntil(caches.open(CACHE_NAME).then(function(e){e.addAll(urlsToCache.map(function(e){return new Request(e,{mode:"no-cors"})})).then(function(){console.log("All resources have been fetched and cached.")}).catch(function(){console.log("Faild to cache resource")})}))});var lastdate=Date.now(),count=0;function getRestaurantData(e,t,n){if(console.log(n),console.log(t.indexOf(pathNames[0])+":"+pathNames[0]),console.log(t.indexOf(pathNames[1])+":"+pathNames[1]),1===t.indexOf(pathNames[0])){if(e&&e.length>2){return fetchRestaurantsFromIDBPerId(e[2]).then(function(e){return new Response(JSON.stringify(e),{headers:{"Content-Type":"application/json"}})})}return fetchRestaurantsFromIDB().then(function(e){return new Response(JSON.stringify(e),{headers:{"Content-Type":"application/json"}})})}if(1===t.indexOf(pathNames[1])){var a=n.split("=")[1];if(console.log(n),a)return fetchReviewsFromIDB(a).then(function(e){return new Response(JSON.stringify(e),{headers:{"Content-Type":"application/json"}})})}}function openDatabase(){return navigator.serviceWorker||idb?idb.open("restaurant",1):Promise.resolve()}function CacheRestaurants(e,t){lastdate=Date.now(),count=0,WriteToIDB(e,t)}function createDB(){idb.open("restaurant",1,function(e){var t=e.createObjectStore("restaurants",{keyPath:"id"}),n=e.createObjectStore("reviews",{keyPath:"id"});t.createIndex("id","id"),n.createIndex("restaurant_id","restaurant_id")})}function WriteToIDB(e,t){e.then(function(e){const n=self.openDatabase();n&&n.then(n=>{const a=n.transaction(t,"readwrite");try{e&&e.length>0?e.forEach(e=>{a.objectStore(t).put(e)}):a.objectStore(t).put(e)}catch(e){}return a.complete})})}function fetchRestaurantsFromIDB(){const e=self.openDatabase();if(e)return e.then(e=>e.transaction("restaurants").objectStore("restaurants").getAll()).then(function(e){return e})}function fetchRestaurantsFromIDBPerId(e){const t=self.openDatabase();if(t)return t.then(t=>t.transaction("restaurants").objectStore("restaurants").get(parseInt(e))).then(function(e){return e})}function fetchReviewsFromIDB(e){const t=self.openDatabase();if(t)return t.then(t=>t.transaction("reviews").objectStore("reviews").get(parseInt(e))).then(function(e){return e})}self.addEventListener("fetch",function(e){const t=new URL(e.request.url),n=t.pathname.split("/");if(t.host===dataHost){if(lastdate&&count>0&&(Date.now()-lastdate)/1e3<60)return console.log(`inside ${(Date.now()-lastdate)/1e3}`),e.respondWith(getRestaurantData(n,t.pathname,t.search));count++;const a=e.request.clone();return e.respondWith(fetch(a).then(function(e){if(e){var n=e.clone();return 1===t.pathname.indexOf(pathNames[0])?CacheRestaurants(n.json(),pathNames[0]):1===t.pathname.indexOf(pathNames[1])&&CacheRestaurants(n.json(),pathNames[1]),e}}).catch(function(e){return console.log(`Could not find url :${t} from the network`),getRestaurantData(n,t.pathname,t.search)}))}return e.respondWith(caches.match(e.request).then(function(n){if(n)return n;var a=e.request.clone();return fetch(a).then(function(t){if(!t||200!==t.status||"basic"!==t.type)return t;var n=t.clone();return caches.open(CACHE_NAME).then(function(t){t.put(e.request,n)}),t}).catch(function(e){return console.log(`error : ${t}`),new Response("error")})}).catch(function(e){return console.log(`error : ${t}`),new Response("error")}))}),self.addEventListener("activate",function(e){createDB(),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.map(function(t){if(-1==e.indexOf(CACHE_NAME))return caches.delete(t)}))}))});