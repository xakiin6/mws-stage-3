class DBHelper{static host(){return"http://localhost:1337"}static endPoints(){return{RESTAURANTS:0,RESTAURANTS_BY_ID:1,REVIEWS:3,REVIEWS_BY_RESTAURANT:4,POST_REVIEWS:5,MARK_FAVOURATES:6,UNMARK_FAVOURATES:7}}static DATABASE_URL(e,t){let r;switch(e){case 0:r=`${DBHelper.host()}/restaurants`;break;case 1:r=`${DBHelper.host()}/restaurants/${t}`;break;case 4:r=`${DBHelper.host()}/reviews/?restaurant_id=${t}`;break;case 5:r=`${DBHelper.host()}/reviews/`;break;case 6:r=`${DBHelper.host()}/restaurants/${t}/?is_favorite=true`;break;case 7:r=`${DBHelper.host()}/restaurants/${t}/?is_favorite=false`;default:r=DBHelper.host()}return r}static fetchRestaurantById(e){return console.log(DBHelper.endPoints().RESTAURANTS_BY_ID),fetch(DBHelper.DATABASE_URL(DBHelper.endPoints().RESTAURANTS_BY_ID,e)).then(function(e){return e.ok?e.json():[{}]})}static postReviews(e){return fetch(DBHelper.DATABASE_URL(this.endPoints().POST_REVIEWS,null),{method:"post",body:e}).then(function(e){return e.ok?e.json():[{}]})}static fetchReviewsByRestaurant(e){return fetch(DBHelper.DATABASE_URL(DBHelper.endPoints().REVIEWS_BY_RESTAURANT,e)).then(function(e){return e.ok?e.json():[{}]})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph?e.photograph:"10"}.jpg`}static imageUrlsForSrcSet(e){var t=`${e||"10"}`;return`/img/${t}.jpg 400w, /img/${t+"-650.jpg"} 600w`}static mapMarkerForRestaurant(e,t){try{if(google){return new google.maps.Marker({position:e.latlng,title:e.name+" Restaurant",url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}catch(e){}}}let restaurants,allRestaurants,neighborhoods,cuisines;var map,myWorker;window.addEventListener("load",function(){"serviceWorker"in navigator&&navigator.serviceWorker.register("/sw-min.js",{scope:"/"}).then(function(e){},function(e){});var e=document.querySelector("iframe");e&&e.setAttribute("title","Google Maps")});var markers=[];let ul,neighborhoods_select,cuisines_select,observer;function StartImageObserver(){const e=document.querySelectorAll("#restaurants-list li");"IntersectionObserver"in window?(observer=new IntersectionObserver(onIntersection,{rootMargin:"50px 0px",threshold:.01}),e.forEach(e=>observer.observe(e))):Array.from(e).forEach(e=>populateImages(e))}function onIntersection(e){e.forEach(e=>{e.intersectionRatio>0&&(observer.unobserve(e.target),populateImages(e.target))})}function populateImages(e){e.insertAdjacentHTML("afterbegin",e.dataset.image)}function myInit(){neighborhoods_select=document.getElementById("neighborhoods-select"),cuisines_select=document.getElementById("cuisines-select"),ul=document.getElementById("restaurants-list"),window.Worker&&(self.myWorker=new Worker("/js/worker-min.js"),self.myWorker.postMessage({method:"N"}),requestAnimationFrame(()=>{self.myWorker.onmessage=function(e){var t=JSON.parse(e.data);switch(t.method){case"N":fetchNeighborhoods(t.data),self.myWorker.postMessage({method:"C",data:t.N}),self.allRestaurants=t.N;break;case"C":fetchCuisines(t.data);break;case"NC":resetRestaurants(t.data),fillRestaurantsHTML()}}}))}document.addEventListener("DOMContentLoaded",()=>{},!1),fetchNeighborhoods=(e=>{self.neighborhoods=e,fillNeighborhoodsHTML()}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{e.forEach(e=>{neighborhoods_select.insertAdjacentHTML("beforeend",`<option value="${e}">${e}</option>`)})}),fetchCuisines=(e=>{self.cuisines=e,fillCuisinesHTML(),updateRestaurants()}),fillCuisinesHTML=((e=self.cuisines)=>{e.forEach(e=>{cuisines_select.insertAdjacentHTML("beforeend",`<option value="${e}">${e}</option>`)})}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1})}),updateRestaurants=(()=>{const e=cuisines_select.selectedIndex,t=neighborhoods_select.selectedIndex,r=cuisines_select[e].value,s=neighborhoods_select[t].value;self.myWorker.postMessage({method:"NC",param:[r,s],data:self.allRestaurants})}),resetRestaurants=(e=>{self.restaurants=[],ul.innerHTML="",self.map&&self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{e?(e.forEach(e=>{ul.append(createRestaurantHTML(e))}),self.map&&addMarkersToMap()):ul.innerHTML='<li style="width:100% !important"><p>No restaurants found!</p></li>'}),createRestaurantHTML=(e=>{const t=renderHtml("li",null),r=`<img class="restaurant-img" alt="${e.name} restaurant" src="img/${e.photograph||"10"}.jpg">`;t.innerHTML=r,renderHtml("h2",e.name,t),renderHtml("p",e.neighborhood,t),renderHtml("p",e.address,t);const s=renderHtml("a","View Details");return s.setAttribute("aria-label",`View Details ${e.name} Restaurant`),s.href=DBHelper.urlForRestaurant(e),t.append(s),t}),addMarkersToMap=((e=self.restaurants)=>{e&&e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})}),renderHtml=((e,t,r=null)=>{var s=document.createElement(e);return t&&(s.innerHTML=t),r&&r.append(s),s});